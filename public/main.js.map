{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/create/create.component.css","webpack:///./src/app/components/create/create.component.html","webpack:///./src/app/components/create/create.component.ts","webpack:///./src/app/components/edit/edit.component.css","webpack:///./src/app/components/edit/edit.component.html","webpack:///./src/app/components/edit/edit.component.ts","webpack:///./src/app/components/index/index.component.css","webpack:///./src/app/components/index/index.component.html","webpack:///./src/app/components/index/index.component.ts","webpack:///./src/app/routerConfig.ts","webpack:///./src/app/service/costumer.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div style=\\\"text-align:center\\\">\\n  <h1>\\n    {{title}}!!\\n  </h1>\\n  <nav class=\\\"navbar navbar-default\\\">\\n    <div class=\\\"container-fluid\\\">\\n      <ul class=\\\"nav navbar-nav\\\">\\n        <li class=\\\"active\\\">\\n          <a routerLink=\\\"create\\\" routerLinkActive=\\\"active\\\">\\n            Add Costumers\\n          </a>\\n        </li>    \\n      </ul>\\n    </div>\\n  </nav>\\n  \\n  <div class=\\\"container\\\">\\n    <router-outlet></router-outlet>\\n  </div>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Welcome to Webtrekk';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { AppComponent } from './app.component';\nimport { IndexComponent } from './components/index/index.component';\nimport { CreateComponent } from './components/create/create.component';\nimport { EditComponent } from './components/edit/edit.component';\nimport { appRoutes } from './routerConfig';\n\nimport { CostumerService } from './service/costumer.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    IndexComponent,\n    CreateComponent,\n    EditComponent\n  ],\n  imports: [\n    BrowserModule, RouterModule.forRoot(appRoutes), HttpClientModule, ReactiveFormsModule\n  ],\n  providers: [CostumerService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"panel panel-primary\\\">\\n  <div class=\\\"panel-heading\\\">\\n    {{ title }}\\n  </div>\\n  <div class=\\\"panel-body\\\">\\n    <form [formGroup]=\\\"angForm\\\" novalidate>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Coin Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" #name />\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['name'].invalid && (angForm.controls['name'].dirty || angForm.controls['name'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['name'].errors.required\\\">\\n          Name is required.\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Coin Price</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"price\\\" #price/>\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['price'].invalid && (angForm.controls['price'].dirty || angForm.controls['price'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['price'].errors.required\\\">\\n          Price is required.\\n        </div>\\n      </div>\\n        <div class=\\\"form-group\\\">\\n          <button (click)=\\\"addCoin(name.value, price.value)\\\" [disabled]=\\\"angForm.pristine || angForm.invalid\\\" class=\\\"btn btn-primary\\\">Add</button>\\n        </div>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { CostumerService } from '../../service/costumer.service';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n  title = 'Add Costumer';\n  angForm: FormGroup;\n\n  constructor(private costumerservice: CostumerService, private fb: FormBuilder) {\n    this.createForm();\n   }\n  createForm() {\n    this.angForm = this.fb.group({\n      first_name: ['', Validators.required ],\n      last_name: ['', Validators.required ]\n   });\n  }\n  addCoin(first_name, last_name) {\n      this.costumerservice.addCostumer({name: {first: first_name, last: last_name}});\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"panel panel-primary\\\">\\n  <div class=\\\"panel-heading\\\">\\n    {{ title }}\\n  </div>\\n  <div class=\\\"panel-body\\\">\\n    <form [formGroup]=\\\"angForm\\\" novalidate>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Coin Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" #name [(ngModel)] = \\\"coin.name\\\"/>\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['name'].invalid && (angForm.controls['name'].dirty || angForm.controls['name'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['name'].errors.required\\\">\\n          Name is required.\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Coin Price</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"price\\\" #price [(ngModel)] = \\\"coin.price\\\" />\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['price'].invalid && (angForm.controls['price'].dirty || angForm.controls['price'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['price'].errors.required\\\">\\n          Price is required.\\n        </div>\\n      </div>\\n        <div class=\\\"form-group\\\">\\n          <button (click)=\\\"updateCoin(name.value, price.value)\\\" [disabled]=\\\"angForm.pristine || angForm.invalid\\\" class=\\\"btn btn-primary\\\">Update</button>\\n        </div>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CostumerService } from './../../service/costumer.service';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  costumer: any;\n  angForm: FormGroup;\n  title = 'Edit Costumer';\n  constructor(private route: ActivatedRoute, private router: Router, private service: CostumerService, private fb: FormBuilder) {\n    this.createForm();\n   }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      name: ['', Validators.required ],\n      price: ['', Validators.required ]\n   });\n  }\n\n  updateCostumer(first_name, last_name) {\n    this.route.params.subscribe(params => {\n      this.service.updateCostumer({name: {first: first_name, last: last_name}}, params['id']);\n      this.router.navigate(['index']);\n    });\n  }\n\n  deleteCostumer(id) {\n    this.service.deleteCostumer(id).subscribe(res => {\n      console.log('Deleted');\n    });\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.costumer = this.service.editCostumer(params['id']).subscribe(res => {\n        this.costumer = res;\n      });\n    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<table class=\\\"table table-hover\\\">\\n  <thead>\\n  <tr>\\n      <td>Coin Name</td>\\n      <td>Coin Price</td>\\n      <td colspan=\\\"2\\\">Actions</td>\\n  </tr>\\n  </thead>\\n\\n  <tbody>\\n      <tr *ngFor=\\\"let coin of coins\\\">\\n          <td>{{ coin.name }}</td>\\n          <td>{{ coin.price }}</td>\\n          <td><a [routerLink]=\\\"['/edit', coin._id]\\\" class=\\\"btn btn-primary\\\">Edit</a></td>\\n          <td><button (click)=\\\"deleteCoin(coin._id)\\\"  class=\\\"btn btn-danger\\\">Delete</button></td>\\n      </tr>\\n  </tbody>\\n</table>\"","import { CostumerService } from './../../service/costumer.service';\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.css']\n})\nexport class IndexComponent implements OnInit {\n\n  costumers: any;\n\n  constructor(private http: HttpClient, private service: CostumerService) {}\n\n  ngOnInit() {\n    this.getCostumers();\n  }\n\n  getCostumers() {\n    this.service.getCostumers().subscribe(res => {\n      this.costumers = res;\n    });\n  }\n\n}\n","import { Routes } from '@angular/router';\nimport { CreateComponent } from './components/create/create.component';\nimport { EditComponent } from './components/edit/edit.component';\nimport { IndexComponent } from './components/index/index.component';\n\nexport const appRoutes: Routes = [\n  { path: 'create', \n    component: CreateComponent \n  },\n  {\n    path: 'edit/:id',\n    component: EditComponent\n  },\n  { path: 'index',\n    component: IndexComponent\n  }\n];","import { Injectable } from '@angular/core';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from \"rxjs/operators\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CostumerService {\n\n  result: any;\n  constructor(private http: HttpClient) {}\n\n  addCostumer(costumer) {\n    const uri = 'http://localhost:8080/costumers/add';\n  \n    this\n      .http\n      .post(uri, costumer)\n      .subscribe(res =>\n          console.log('Done'));\n  }\n\n  getCostumers() {\n    const uri = 'http://localhost:8080/costumers';\n    return this\n            .http\n            .get(uri)\n            .pipe(\n              map(res => {\n                return res;\n              })\n            );\n  }\n\n  editCostumer(id) {\n    const uri = 'http://localhost:8080/costumers/edit/' + id;\n    return this\n            .http\n            .get(uri)\n            .pipe(\n              map(res => {\n                return res;\n              })\n            );\n  }\n\n  updateCostumer(costumer, id) {\n    const uri = 'http://localhost:8080/costumers/update/' + id;\n\n    this\n      .http\n      .post(uri, costumer)\n      .subscribe(res => console.log('Done'));\n  }\n\n  deleteCostumer(id) {\n    const uri = 'http://localhost:8080/costumers/delete/' + id;\n\n        return this\n            .http\n            .get(uri)\n            .pipe(\n              map(res => {\n                return res;\n              })\n            );\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}