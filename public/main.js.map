{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/create/create.component.css","webpack:///./src/app/components/create/create.component.html","webpack:///./src/app/components/create/create.component.ts","webpack:///./src/app/components/edit/edit.component.css","webpack:///./src/app/components/edit/edit.component.html","webpack:///./src/app/components/edit/edit.component.ts","webpack:///./src/app/components/index/index.component.css","webpack:///./src/app/components/index/index.component.html","webpack:///./src/app/components/index/index.component.ts","webpack:///./src/app/model/costumer.ts","webpack:///./src/app/routerConfig.ts","webpack:///./src/app/service/costumer.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div style=\\\"text-align:center\\\">\\r\\n  <h1>\\r\\n    {{title}}!!\\r\\n  </h1>\\r\\n  <nav class=\\\"navbar navbar-default\\\">\\r\\n    <div class=\\\"container-fluid\\\">\\r\\n      <ul class=\\\"nav navbar-nav\\\">\\r\\n        <li class=\\\"active\\\">\\r\\n          <a routerLink=\\\"index\\\" routerLinkActive=\\\"active\\\">\\r\\n            Add Costumers\\r\\n          </a>\\r\\n        </li>    \\r\\n      </ul>\\r\\n    </div>\\r\\n  </nav>\\r\\n  \\r\\n  <div class=\\\"container\\\">\\r\\n    <router-outlet></router-outlet>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Welcome to Webtrekk';\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { AppComponent } from './app.component';\r\nimport { IndexComponent } from './components/index/index.component';\r\nimport { CreateComponent } from './components/create/create.component';\r\nimport { EditComponent } from './components/edit/edit.component';\r\nimport { appRoutes } from './routerConfig';\r\n\r\nimport { CostumerService } from './service/costumer.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    IndexComponent,\r\n    CreateComponent,\r\n    EditComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule, RouterModule.forRoot(appRoutes), HttpClientModule, ReactiveFormsModule\r\n  ],\r\n  providers: [CostumerService],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"\"","module.exports = \"<div class=\\\"panel panel-primary\\\">\\r\\n  <div class=\\\"panel-heading\\\">\\r\\n    {{ title }}\\r\\n  </div>\\r\\n  <div class=\\\"panel-body\\\">\\r\\n    <form [formGroup]=\\\"angForm\\\" novalidate>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"col-md-4\\\">First Name</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"first_name\\\" #first_name [(ngModel)]=\\\"costumer.name.first\\\"/>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"angForm.controls['first_name'].invalid && (angForm.controls['first_name'].dirty || angForm.controls['first_name'].touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n        <div *ngIf=\\\"angForm.controls['first_name'].errors.required\\\">\\r\\n          First Name is required.\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"form-group\\\">\\r\\n        <label class=\\\"col-md-4\\\">Last Name</label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"last_name\\\" #last_name [(ngModel)]=\\\"costumer.name.last\\\"/>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"angForm.controls['last_name'].invalid && (angForm.controls['last_name'].dirty || angForm.controls['last_name'].touched)\\\" class=\\\"alert alert-danger\\\">\\r\\n        <div *ngIf=\\\"angForm.controls['last_name'].errors.required\\\">\\r\\n          Last Name is required.\\r\\n        </div>\\r\\n      </div>\\r\\n        <div class=\\\"btn-toolbar\\\">\\r\\n          <button (click)=\\\"addCostumer(costumer)\\\" [disabled]=\\\"angForm.pristine || angForm.invalid\\\" class=\\\"btn btn-primary\\\">Add</button>\\r\\n          <a [routerLink]=\\\"['/index']\\\" class=\\\"btn btn-primary\\\">Back</a>\\r\\n        </div>\\r\\n    </form>\\r\\n  </div>\\r\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { CostumerService } from '../../service/costumer.service';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { Costumer } from \"../../model/costumer\"\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n  title = 'Add Costumer';\n  angForm: FormGroup;\n\n  @Input()\n  costumer: Costumer;\n\n  constructor(private costumerservice: CostumerService, private fb: FormBuilder) {\n    this.costumer = {\n      name: {\n        first: '',\n        last: ''\n      },\n      gender: ''\n    };\n\n    this.createForm();\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      first_name: ['', Validators.required ],\n      last_name: ['', Validators.required ]\n    });\n  }\n\n  addCostumer(costumer: Costumer) {\n      this.costumerservice.addCostumer(costumer);\n  }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"panel panel-primary\\\">\\n  <div class=\\\"panel-heading\\\">\\n    {{ title }}\\n  </div>\\n  <div *ngIf=\\\"costumer\\\" class=\\\"panel-body\\\">\\n    <form [formGroup]=\\\"angForm\\\" novalidate>\\n      <div class=\\\"form-group\\\" *ngIf=\\\"costumer.name\\\">\\n        <label class=\\\"col-md-4\\\">First Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"first_name\\\" #first_name [(ngModel)] = \\\"costumer.name.first\\\"/>\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['first_name'].invalid && (angForm.controls['first_name'].dirty || angForm.controls['first_name'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['first_name'].errors.required\\\">\\n          First Name is required.\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\" *ngIf=\\\"costumer.name\\\">\\n        <label class=\\\"col-md-4\\\">Last Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"last_name\\\" #last_name [(ngModel)] = \\\"costumer.name.last\\\" />\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['last_name'].invalid && (angForm.controls['last_name'].dirty || angForm.controls['last_name'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['last_name'].errors.required\\\">\\n          Last Name is required.\\n        </div>\\n      </div>\\n        <div class=\\\"btn-toolbar\\\">\\n          <button (click)=\\\"updateCostumer(costumer)\\\" [disabled]=\\\"angForm.pristine || angForm.invalid\\\" class=\\\"btn btn-primary\\\">Update</button>\\n          <a [routerLink]=\\\"['/index']\\\" class=\\\"btn btn-primary\\\">Back</a>\\n        </div>\\n    </form>\\n  </div>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CostumerService } from './../../service/costumer.service';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { Costumer } from \"../../model/costumer\"\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  @Input()\n  costumer: any;\n\n  angForm: FormGroup;\n  title = 'Edit Costumer';\n\n  constructor(private route: ActivatedRoute, private router: Router, private service: CostumerService, private fb: FormBuilder) {\n    this.route.params.subscribe(params => {\n      this.costumer = this.service.editCostumer(params['id']).subscribe(res => {\n        this.costumer = res;\n       \n      });\n    });\n\n    this.createForm();\n  }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      first_name: ['', Validators.required ],\n      last_name: ['', Validators.required ]\n   });\n  }\n\n  updateCostumer(costumer) {\n    this.route.params.subscribe(params => {\n      this.service.updateCostumer(costumer, params['id']);\n      this.router.navigate(['index']);\n    });\n  }\n\n  deleteCostumer(id) {\n    this.service.deleteCostumer(id).subscribe(res => {\n      console.log('Deleted');\n    });\n  }\n\n  ngOnInit() {\n    \n  }\n\n}\n","module.exports = \"\"","module.exports = \"<a [routerLink]=\\\"['/create']\\\" class=\\\"btn btn-primary pull-left\\\">New</a>\\r\\n\\r\\n<table class=\\\"table table-hover\\\">\\r\\n  <thead>\\r\\n  <tr>\\r\\n      <td>First Name</td>\\r\\n      <td>Last Name</td>\\r\\n      <td>Gender</td>\\r\\n      <td>Actions</td>\\r\\n  </tr>\\r\\n  </thead>\\r\\n\\r\\n  <tbody>\\r\\n      <tr *ngFor=\\\"let costumer of costumers\\\">\\r\\n          <td>{{ costumer.name.first }}</td>\\r\\n          <td>{{ costumer.name.last }}</td>\\r\\n          <td>{{ costumer.gender }}</td>\\r\\n          <td>\\r\\n            <div>\\r\\n                <a [routerLink]=\\\"['/edit', costumer._id]\\\" class=\\\"btn btn-primary\\\">Edit</a>\\r\\n                <button (click)=\\\"deleteCostumer(costumer._id)\\\"  class=\\\"btn btn-danger\\\">Delete</button>\\r\\n            </div>\\r\\n          </td>\\r\\n      </tr>\\r\\n  </tbody>\\r\\n</table>\"","import { CostumerService } from './../../service/costumer.service';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.css']\n})\nexport class IndexComponent implements OnInit {\n\n  costumers: any;\n\n  constructor(private http: HttpClient, private route: ActivatedRoute, private router: Router, private service: CostumerService) {}\n\n  ngOnInit() {\n    this.getCostumers();\n  }\n\n  getCostumers() {\n    this.service.getCostumers().subscribe(res => {\n      this.costumers = res;\n    });\n  }\n\n  deleteCostumer(id) {\n    this.service.deleteCostumer(id).subscribe(res => {\n      console.log('Deleted');\n      //this.router.navigate(['index']);\n      this.getCostumers();\n    });\n  }\n}\n","export class Costumer {\n    _id?: string;\n    name: {\n        first: string;\n        last: string;\n    }\n    //birthday: Date;\n    gender: string;\n    //lastContact: Date;\n    //customerLifetimeValue: number;\n}\n","import { Routes } from '@angular/router';\r\nimport { CreateComponent } from './components/create/create.component';\r\nimport { EditComponent } from './components/edit/edit.component';\r\nimport { IndexComponent } from './components/index/index.component';\r\n\r\nexport const appRoutes: Routes = [\r\n  { path: 'create', \r\n    component: CreateComponent \r\n  },\r\n  {\r\n    path: 'edit/:id',\r\n    component: EditComponent\r\n  },\r\n  { path: 'index',\r\n    component: IndexComponent\r\n  }\r\n];","import { Injectable } from '@angular/core';\r\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from \"rxjs/operators\";\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CostumerService {\r\n\r\n  result: any;\r\n  constructor(private http: HttpClient) {}\r\n\r\n  addCostumer(costumer) {\r\n    const uri = 'http://localhost:8080/costumers/add';\r\n  \r\n    this\r\n      .http\r\n      .post(uri, costumer)\r\n      .subscribe(res =>\r\n          console.log('Done'));\r\n  }\r\n\r\n  getCostumers() {\r\n    const uri = 'http://localhost:8080/costumers';\r\n    return this\r\n            .http\r\n            .get(uri)\r\n            .pipe(\r\n              map(res => {\r\n                return res;\r\n              })\r\n            );\r\n  }\r\n\r\n  editCostumer(id) {\r\n    const uri = 'http://localhost:8080/costumers/edit/' + id;\r\n    return this\r\n            .http\r\n            .get(uri)\r\n            .pipe(\r\n              map(res => {\r\n                return res;\r\n              })\r\n            );\r\n  }\r\n\r\n  updateCostumer(costumer, id) {\r\n    const uri = 'http://localhost:8080/costumers/update/' + id;\r\n\r\n    this\r\n      .http\r\n      .post(uri, costumer)\r\n      .subscribe(res => console.log('Done'));\r\n  }\r\n\r\n  deleteCostumer(id) {\r\n    const uri = 'http://localhost:8080/costumers/delete/' + id;\r\n\r\n        return this\r\n            .http\r\n            .get(uri)\r\n            .pipe(\r\n              map(res => {\r\n                return res;\r\n              })\r\n            );\r\n  }\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * In development mode, to ignore zone related error stack frames such as\r\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\r\n * import the following file, but please comment it out in production mode\r\n * because it will have performance impact when throw error\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}